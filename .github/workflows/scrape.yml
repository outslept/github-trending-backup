name: trending

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22.20.0
          cache: pnpm
      - run: pnpm install --ignore-scripts
      - name: configure-git-user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: build-scraper
        run: pnpm --filter github-trending-tools build
      - name: scrape-trending
        run: pnpm --filter github-trending-tools start
      - name: generate-metadata
        uses: actions/github-script@v8
        with:
          script: |
            const { readdir, writeFile, stat } = require('fs').promises;
            const { join } = require('path');

            const dataRoot = join(process.cwd(), 'packages', 'github-trending-data');

            async function safeReaddir(path) {
              try {
                const s = await stat(path);
                if (!s.isDirectory()) return [];
                return await readdir(path);
              } catch {
                return [];
              }
            }

            const years = {};
            for (const yearName of await safeReaddir(dataRoot)) {
              if (!/^\d{4}$/.test(yearName)) continue;
              years[yearName] = {};

              const yearDir = join(dataRoot, yearName);
              for (const monthName of await safeReaddir(yearDir)) {
                if (!/^\d{2}$/.test(monthName)) continue;

                const monthDir = join(yearDir, monthName);
                const files = await safeReaddir(monthDir);
                const days = files
                  .filter((file) => file.endsWith('.md'))
                  .map((file) => file.replace('.md', '').split('-')[2])
                  .sort();

                if (days.length > 0) {
                  years[yearName][monthName] = days;
                }
              }

              if (Object.keys(years[yearName]).length === 0) {
                delete years[yearName];
              }
            }

            const metadata = {
              lastUpdated: new Date().toISOString(),
              years,
            };

            await writeFile(
              join(dataRoot, 'metadata.json'),
              JSON.stringify(metadata, null, 2)
            );

            console.log('Metadata generated successfully at', join(dataRoot, 'metadata.json'));
      - name: commit-changes
        run: |
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "Update trending repositories and metadata"
          git push
